1.修改表的名字
ALTER TABLE 原名 RENAME 新名;
原名和新名都不用写成字符串形式(如'新名',不要写成这样)

2.
对表结构的修改
(慎重使用该操作,尽可能不要修改表的结构,因为若操作失误可能带来严重后果)


a.增加一列
ALTER TABLE 表名字 ADD COLUMN 列名字 数据类型 约束;

例子:
mysql> ALTER TABLE employee ADD height CHAR(10) DEFAULT NULL;
Query OK, 0 rows affected (0.73 sec)
Records: 0  Duplicates: 0  Warnings: 0

结果:
mysql> SELECT * FROM employee;
+---------+------+--------+--------+
| id      | name | phone  | height |
+---------+------+--------+--------+
|   11354 | Tom  | 123456 | NULL   |
| 1041354 | jack | 123456 | NULL   |
|      54 | jack | 123456 | NULL   |
|       1 | NULL |   NULL | NULL   |
|       2 | NULL |   NULL | NULL   |
+---------+------+--------+--------+
5 rows in set (0.00 sec)

从上面可以看出,改变表结构是一个耗时不小的操作

b.
删除列
ALTER TABLE 表名字 DROP COLUMN 列名字;
例子:
mysql> ALTER TABLE employee DROP height ;
Query OK, 0 rows affected (0.98 sec)
Records: 0  Duplicates: 0  Warnings: 0

同样耗时不短


c.
修改一列
ALTER TABLE 表名字 CHANGE 原列名 新列名 数据类型 约束;
(不建议使用,如果修改数据类型很可能造成数据丢失)



d.
删除行(比较常用)
DELETE FROM 表名字 WHERE 条件;
(切记一定要考虑加 WHERE ,否则整张表就被删除了)


mysql> DELETE FROM employee WHERE name = 'Tom';
Query OK, 1 row affected (0.12 sec)

结果如下:
+---------+------+--------+
| id      | name | phone  |
+---------+------+--------+
| 1041354 | jack | 123456 |
|      54 | jack | 123456 |
|       1 | NULL |   NULL |
|       2 | NULL |   NULL |
+---------+------+--------+

如果没有加WHERE条件:
mysql> DELETE FROM employee;
Query OK, 4 rows affected (0.08 sec)

mysql> SELECT * from employee;
Empty set (0.00 sec)
整张表都被删除了

e.
修改表中某个值(较常用)
UPDATE 表名字 SET 列1=值1,列2=值2 WHERE 条件;

例子:
本来表如下:
+------+------+-------+
| id   | name | phone |
+------+------+-------+
|  123 | Joe  |  NULL |
+------+------+-------+

mysql> UPDATE employee SET id = 456, phone = 123456 WHERE name = 'Joe';
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

例子: 结果
+------+------+--------+
| id   | name | phone  |
+------+------+--------+
|  456 | Joe  | 123456 |
+------+------+--------+
