    首先，nginx在启动时，会解析配置文件，得到需要监听的端口与ip地址，然后在nginx的master进程里
面，先初始化好这个监控的socket(创建socket，设置addrreuse等选项，绑定到指定的ip地址端口，再
listen)，然后再fork出多个子进程出来，然后子进程会竞争accept新的连接。此时，客户端就可以向nginx发
起连接了。当客户端与服务端通过三次握手建立好一个连接后，nginx的某一个子进程会accept成功，得到这个
建立好的连接的socket接着，设置读写事件处理函数并添加读写事件来与客户端进行数据的交换。最后，nginx
或客户端来主动关掉连接，到此，一个连接就寿终正寝了。

request

    request，在nginx中我们指的是http请求，具体到nginx中的数据结构是ngx_http_request_t。
ngx_http_request_t是对一个http请求的封装。 我们知道，一个http请求，包含请求行、请求头、请求体、
响应行、响应头、响应体。

    http请求是典型的请求-响应类型的的网络协议，而http是文件协议，所以我们在分析请求行与请求头，以
及输出响应行与响应头，往往是一行一行的进行处理。如果我们自己来写一个http服务器，通常在一个连接建立
好后，客户端会发送请求过来。然后我们读取一行数据，分析出请求行中包含的method、uri、http_version
信息。然后再一行一行处理请求头，并根据请求method与请求头的信息来决定是否有请求体以及请求体的长度，
然后再去读取请求体。得到请求后，我们处理请求产生需要输出的数据，然后再生成响应行，响应头以及响应
体。在将响应发送给客户端之后，一个完整的请求就处理完了。当然这是最简单的webserver的处理方式，其实
nginx也是这样做的，只是有一些小小的区别，比如，当请求头读取完成后，就开始进行请求的处理了。nginx通
过ngx_http_request_t来保存解析请求与输出响应相关的数据。
