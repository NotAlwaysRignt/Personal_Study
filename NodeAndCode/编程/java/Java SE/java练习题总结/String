java中， String内部是用char[]数组实现的，不过结尾不用\0

把 String 对象作为函数参数传入时,函数会拷贝一份对象的地址,所以在函数中操作的是另一个对象
void change(String str){
    str = 'hello';
}
String str = "Hi" ; 
change(str);
System.out.println(str); //将仍打印 Hi,因为 传入change 的参数 str拿到的一份引用的拷贝

String的赋值(拆装包)
String s1="abcd" ;    //等价于  String s1=new String("abcd");
 
 
String 是不可变类

字符串池:
String类是我们使用频率非常高的一种对象类型。JVM为了提升性能和减少内存开销，避免字符串的重复创建，其
维护了一块特殊的内存空间，即字符串池（String Pool）。字符串池由String类私有的维护。

String s1="abcd"; 
String s2="abcd";
String s3="ab" + "cd";
打印他们的 hashCode(s1.hashCode()) 可以发现它们的值是一样的,也就是说,对同一个字符串,那么JVM只会开辟
一个内存空间来存储它,即便有多个String对象new了这个这个字符串,而不会重复开辟内存空间去存储相同的字符串

 
