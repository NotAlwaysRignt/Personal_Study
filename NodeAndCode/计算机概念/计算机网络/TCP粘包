TCP粘包:  
如果客户在一次TCP连接中每次发送的数据量很小,TCP会先把这些较小的数据放在缓存中不发送出去,而是等到数据量大小达到一定量后才一块打包发送.  
带来的问题:因为多次要发送的数据被打包在一个包内,要把每次发送的数据再提取出来,仅靠TCP协议是没办法的.那样就会导致得不到里面的信息.

本质问题就是它把多次数据放一款发送了,用户要自己想办法再把数据提取回来.

解决方法:
1. 每发送一次数据都建立一次连接,而不是在一次连接中发送多个数据
2. 每次发送的数据都用固定的格式,即在应用层采用自定义的数据格式  
比如采用"数据长度+实际数据"的格式来发送数据,每次的数据中"数据长度"的格式是固定宽度的 比如4字节 可以表示0~4GB的宽度,每次都取出4字节.随后按照正确的宽度取出后续部分  
当然也可以在每次发送数据后加一个结束符,这样就可以在一个包中提取中各次发送的数据

HTTP,redis的通讯协议将 4节字描述消息大小 和 结束符 两者结合的方式来解决TCP粘包的问题(由此我们也可以知道为什么 HTTP 为什么需要 content-length 这一属性以及用 \r\n 作为结束符)
