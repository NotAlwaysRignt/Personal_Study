ln 功能:　为某一个文件在另外一个位置建立一个同步的链接，这个命令最常用的参数是-s
使用方法: ln -参数(可选,通常为-s) 目标文件或目录的位置 要创建的链接文件的位置

具体解释：
    当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只
要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。

用例:
    比如　我在 ~/code 下有个test1 目录, 而我想在 ~/code/test2 下创建一个链接叫mylink,
这样当我访问 ~/code/test2/mylink 目录时就相当于在访问test1的 内容了,也就是说,mylink目录下的内容和 
test 目录下的内容是一样的,而且修改任意一个目录内的内容,两个目录内的内容均会改变(事实上修改的是同一个空间)

命令:(不用事先在test2下创建mylink目录,ln 命令会自己创建)

ln -s ~/code/test1 ~/code/test2/mylink
要注意的三点: 
第一 -s不能漏,如果不加 -s ,则只能用于文件,不能用于目录(后面会解释).

第二,目录的路径要写全(full-path),不能是在~/code下直接用 ln -s test1 test2/mylink ,这样虽然会创建
mylink文件,但它无法定位到test

第三 我们不用先创建好mylink目录,使用ln命令后,mylink会被自动创建好,如果我们不写创建的链接的名字,如:
ln -s ~/code/test1 ~/code/test2/   则会在test2目录下创建一个名为 test1 的链接


关于硬链接(不使用任何参数)和软链接(使用参数-s)的解释
    使用的共同点:占用的空间只有指定的文件(或目录),而创建链接后并不会复制一份文件重复占据磁盘空间
    不同点: 我们可以把软链接看成是windows下的快捷方式,而硬链接可以看成是一个备份(在磁盘空间上其实只有一
份,但用起来就是和备份的效果一样)使用硬链接后,被指定的目标文件位置可以变动,链接仍能找到它,而软链接不行.
另外,对于硬连接,即使删除源文件,我们在链接文件里仍然保存着源文件的内容,而软链接在删除源文件后链接文件也无法
访问了,因此硬链接有防误删的效果

原理详细解释:
【硬连接】
    硬连接指通过索引节点来进行连接。在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一
个编号，称为索引节点号(Inode Index)。在Linux中，多个文件名指向同一索引节点是存在的。一般这种连接就是硬连
接。硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。
其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，
只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所
有硬连接文件均被删除。

【软连接】
另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于Windows的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。

两种链接的区别：  

     硬链接文件有两个限制
1)、不允许给目录创建硬链接；
2)、只有在同一文件系统中的文件之间才能创建链接，而且只有超级用户才有建立硬链接权限。
　　  对硬链接文件进行读写和删除操作时候，结果和软链接相同。但如果我们删除硬链接文件的源文件，硬链接文件仍然存在，而且保留了原有的内容。这时，系统就“忘记”了它曾经是硬链接文件。而把他当成一个普通文件。

    那么我们就可以这样理解：硬连接指通过索引节点来进行的连接，其作用是允许一个文件拥有多个有效路径名，能够达到误删除的作用。

     其原因是因为对应的文件的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它
的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。文件才会被真正删除。

注:保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index即I节点)          

    软链接没有硬链接以上的两个限制，因而现在更为广泛使用，它具有更大的灵活性，甚至可以跨越不同机器、不同网
络对文件进行链接。但是软链接的缺点在于：因为链接文件包含有原文件的路径信息，所以当原文件从一个目录下移到其
他目录中，再访问链接文件，系统就找不到了，而硬链接就没有这个缺陷，你想怎么移就怎么移；还有它要系统分配额外
的空间用于建立新的索引节点和保存原文件的路径。
