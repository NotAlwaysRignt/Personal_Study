定义一个接口，将提供给用户的类 A 实例返回，而其它实例化A所需要都用户不需要的类，放在接口内部进行实例化.比如实例化类A需要先实例化类B，类C，类D，而类B，类C，类D并不提供给用户。这种情况下我们可以可以定义一个接口creaeteA,它返回类A的实例，而把new C,new D等在接口内部实现。

优点：用户不需要去实例化他们不需要用到的类，减少出错的可能性

典型的例子：
比如我们的目的就是提供用户一个汽车类。这个汽车类在实例化时要先实例化 引擎类，车轮类，车身类等作为汽车类的构造函数参数。 那么我们就不应该把引擎类，车轮类，车身类的实例交给用户。这时可以定义一个接口，接口内部实现好这些类的实例并传给汽车类构造函数，返回汽车类实例。

局限性：在这种模式下，引擎类，车轮类，车身类 的实例化都是一开始设定好的，所以用户不能去对这些类进行个人定制。
