前置知识:类的装载,连接和初始化

加载是指将编译后的java类文件（也就是.class文件）中的二进制数据读入内存，并将其放在运行时数据区的方法
区内，然后在堆区创建一个Java.lang.Class对象，这个对象用来封装类在方法区的数据结构,即，这个Class对象封装
了我们要使用的类的各种信息。

对于一个类(设为A),虚拟机加载后会得到一个Class对象(类型为Java.lang.Class)
要注意的是：该Java.lang.Class对象是单实例的，无论类A创建了多少个对象，他的Class对象是唯一的


加载并获取该Class对象可以通过三种途径： 假设有一个 class A 在demo文件夹下(package demo)
1.
Class.forName('类的全路径')
例 Class.forName('demo.A')


2.
类名.class(属性)
例: A.class 


3.
实例对象.getClass()
A a = new A()
a.getClass()


另外,用ClassLoader类的 loadClass方法加载一个类,并不是对类的主动使用,不会导致类的初始化


Class.forName 类名.class 实例对象getClass() 三者的区别
    Class cl=A.class; JVM将使用类A的类装载器,将类A装入内存(前提是:类A还没有装入内存),不对类A做类的初
始化工作.返回类A的Class的对象
    因为要先实例化类,所以用 getClass 获得的类是已经初始化了的
    Class.forName("类名");  装入类A,并做类的初始化
