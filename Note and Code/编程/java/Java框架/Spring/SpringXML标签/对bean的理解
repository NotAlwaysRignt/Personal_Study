Spring 的 IOC 可以使用 XML 文件配置的方式来描述对象之间的关系的
理解 XML 文件配置背后的意义,而不是死记这些规则,有助于我们更好地使用这个 Spring 框架

    Spring中,每个对象对应一个 <bean>, id 就是这个对象的名字, class值的是这个对象所属的类

为什么指明了 class 还要一个自己命名的 id ? 
    答案很简单:因为一个类往往不止对应一个对象,每个对象内部的成员变量可能都不一样,功能也不一样,因此每个
对象也必须拥有一个独立的 id

    构建对象时,我们需要给对象内部的成员变量赋初值,每个成员变量对应一个 property 标签,
name 是代码中成员变量的名字,value 或 ref 则表示所赋的值
当然 value 和 ref 是有区别的, ref 即 引用(refference),使用ref,传入的是其它的对象(bean)
而 value 里面的值一般是基本数据类型(int, boolean...)或 String 的值,一般不用value 传入其它对象

    scope 用于表述bean,也就是描述对象的作用域,最常用的是 scope="prototype",和scope = "singleton"
scope = "singleton",意味着创建对象采用单例模式, 我们使用 context.getBean 创建了一个指定 id的对象后
之后每次使用 getBean 获取这个id 的对象,都获取的之前第一次创建的那个对象,也就是说,第一次创建某个对象的
id 后它会一直驻留在内存中,这样的优点是避免了 频繁的创建和销毁对象,缺点是会占用内存(原理请查单例模式)
scope="prototype",则意味着每次用 getBean 获取对象,都会重新开辟一个内存去创建对象


