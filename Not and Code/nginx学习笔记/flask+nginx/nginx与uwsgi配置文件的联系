nginx 和 uwsgi 的通信 其实就是同一主机下进程和进程的通信(IPC Inter-Process Communication，进
程间通信),下面介绍两种机制:
    一种是同一主机下两个进程通过tcp来通信,比如两个进程都通过访问127.0.0.1下的同一个端口实现
数据的传输,缺点: 因为用的是tcp协议,所以需要经过网络协议栈，需要打包拆包、计算校
验和、维护序号和应答等.
    第二种是借助Unix domain socket,这是用来做进程之间数据沟通的中间文件,维基百科的定义如下:

    A Unix domain socket or IPC socket (inter-process communication socket) is a data 
communications endpoint for exchanging data between processes executing on the same 
host operating system

   TCP是为不可靠的网络通讯设计的,各种校验用在进程中通信相对会影响效率.  Unix domain socket机制
的本质只是将应用层数据从一个进程拷贝到另一个进程,因为进程中的通信是可靠的通讯,不会有网络中掉包的状
况发生(在同一个主机中).UNIX Domain Socket也提供面向流和面向数据包两种API接口，类似于TCP和UDP，
但是面向消息的UNIX Domain Socket也是可靠的，消息既不会丢失也不会顺序错乱。

下面就是针对上述两种机制的不同配置方法

配置方法1:
uwsgi的配置文件:

[uwsgi]
socket = 127.0.0.1:5000  
processes = 4   
threads = 2 
master = true
pythonpath = /home/admin/test
module = test
callable = app
memory-report = true

nginx中配置如下
server {
        listen       8888;
        server_name  localhost;
        location / {
            include uwsgi_params;
            uwsgi_pass  127.0.0.1:5000;
            }
        }

uwsgi_params在nginxconf文件夹下自带，uwsgi_pass一定要跟uwsgi_conf.ini中写的地址完全一致
这两个配置使得 nginx 监听8888端口,然后数据传输到127.0.0.1:5000 上与uwsgi通信(uwsgi监听
127.0.0.1:5000 接收数据,实现了进程间数据的交流)
nginx配置中:
uwsgi_pass  127.0.0.1:5000; #指向uwsgi 所应用的内部地址,所有请求将转发给uwsgi 处理


方法2:
先看uwsgi的配置
[uwsgi]
#application's base folder
base = /var/www/demoapp

#python module to import   
app = hello
module = %(app)

home = %(base)/venv
pythonpath = %(base)

#socket file's location
socket = /var/www/demoapp/%n.sock

#permissions for the socket file
chmod-socket    = 666

#the variable that holds a flask application inside the module imported at line #6
callable = app

#location of log files
logto = /var/log/uwsgi/%n.log


nginx的配置

server {
    listen      80;
    server_name localhost;
    charset     utf-8;
    client_max_body_size 75M;

    location / { try_files $uri @yourapplication; }
    location @yourapplication {
        include uwsgi_params;
        uwsgi_pass unix:/var/www/demoapp/demoapp_uwsgi.sock;
    }
}

uwsgi_pass unix:/var/www/demoapp/demoapp_uwsgi.sock;
代表Nginx和uWSGI之间的链接是通过一个sock文件

这个sock文件就是 Unix domain socket,nginx通过listen 80端口接收数据,然后将数据传输到
demoapp_uwsgi.sock文件中,uwsgi就通过demoapp_uwsgi.sock获得了数据,nginx 和 uwsgi
借助这个sock文件实现了数据的交互

