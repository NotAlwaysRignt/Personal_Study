abstract 类 和 interface 的使用场景是什么?

abstract类 和 interface 的设计目的是不一样的

    abstract类的核心在于,我们实现一类物体的部分属性或功能,重点是部分,比如一个哺乳动物抽象类,我们可以
定义它有胎生,恒温等确定的行为,但是在定义"叫"这个行为的时候,显然不同种类的哺乳动物,比如猫和狗,叫声是不一
样的,因此我们要用非 abstract 的猫和狗等子类继承哺乳动物这个 abstract 类,再做进一步的实现

    而 interface 的核心在于,我们知道这个物体能干什么,我们注重的是有什么功能,而不是要考虑父类和子类的关
系.不需要遵从类的继承关系,比如一个 "跑" 的方法,狗可以跑,猫可以跑,机器人也可以跑,我们重点是关注要不要有
跑这个行为,而不需要关注跑可以不可以归到某一类事物中
