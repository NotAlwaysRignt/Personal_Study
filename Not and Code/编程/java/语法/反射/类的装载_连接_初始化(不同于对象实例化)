一个类(class)要被使用必须经过装载，连接，初始化这样的过程

1.
在装载阶段，类装载器会把编译形成的class文件载入内存，创建类相关的Class对象，这个Class对象封装了我们要使
用的类的类型信息

2.
连接阶段又可以分为三个子步骤：验证、准备和解析。
    验证就是要确保java类型数据格式 的正确性，并适于JVM使用。
    准备阶段，JVM为静态变量分配内存空间，并设置默认值，注意，这里是设置默认值，比如说int型的变量会被赋予
默认值0 。在这个阶段，JVM可能还会为一些数据结构分配内存，目的是提高运行程序的性能，比如说方法表。
    解析过程就是在类型的常量池中寻找类、接口、字段和方法的符号引用，把这些符号引用替换成直接引用。这个阶段
可以被推迟到初始化之后，当程序运行的过程中真正使用某个符号引用的时候 再去解析它。

3.
类的初始化：
初始化类，指初始化static静态变量和执行static静态代码块。
初始化接口，指初始化定义在该接口中的filed。

注意类的初始化 和类的实例化是不同的, 类只有把装载,连接,初始化后才能做实例化操作(即new一个对象)

初始化的条件:
创建类的实例；
调用类的静态方法；
调用类的静态变量，并且该变量不是一个常变量；
为类的静态字段赋值；
调用类Class及包java.lang.reflect中的某些反射方法；
...

