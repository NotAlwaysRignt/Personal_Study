    函数,类,模块 应尽可能对外提供扩展,对修改关闭.
    原因:修改以前的代码很可能导致对其它旧代码产生影响.


    开闭原则其实是比较泛的一个概念,当我们遵循接口隔离,里氏原则,依赖注入原则时,自然就是对开闭原则的遵循.
    比如里氏原则中我们让子类不重写父类的方法,即尽量避免一个已经实现的方法的修改,而只是对父类作拓展.
    再如我们选择用接口时,但一旦定义好了接口,我们在继承接口时就必须实现这些方法,并且这些方法的最终实现的目的是明确的,我们可以修改实现功能的具体细节,但不能对方法的功能进行修改,如果真要改,那就应该用另一个接口了.
