最左匹配原则针对的索引是复合索引

以该表的(name,cid)复合索引为例,它内部结构简单说就是下面这样排列的：
name cid
a    6
c    4
c    5
h    1
z    9

mysql创建复合索引的规则是首先会对复合索引的最左边的，也就是第一个name字段的数据进行排序，
在第一个字段的排序基础上，然后再对后面第二个的cid字段进行排序,所以我们看到第一个字段 name 排序完后
第二个字段cid就成了无序了的,如果我们使用索引时,是根据 cid 进行查询而不是根据name 查询,那就相当于对
一组无序的数据进行操作,而索引之所以高效就是因为它是通过对有序数据进行操作(二分查找),如果对无序数据操作
那就相当于一个无效索引
cid什么时候会变得有序?根据上例可得只有在name字段等值匹配的情况下,如下:
name cid
a    6
c    4
c    5
c    7
h    1
z    9

对同一个name "c",cid分别为4 5 7 ,也就是说,要想使用第二个索引,必须先使用第一个索引(最左边的),在复合索引
中,越左边的字段会被优先进行排序,因此我们使用复合索引时要对最左边的索引开始使用




参考自知乎:
作者：沈杰
链接：https://www.zhihu.com/question/36996520/answer/93256153
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。


