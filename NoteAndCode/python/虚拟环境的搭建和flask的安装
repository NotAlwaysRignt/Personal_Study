虚拟环境的搭建

python 3.5以上的版本在安装虚拟环境时不需要virtualenv也可以创建虚拟环境
但使用virtualen和python3自带的创建venv的方法会有不同的效果 

1.使用自带的命令
创建一个目录名为myvenv
在这个目录下打开终端： 键入 python3 -m venv 文件路径
如：python3 -m venv ~/文档/python_flask/myvenv
(注意 跟在 -m 后面的venv表示的是虚拟环境,而不是文件夹名称)
这样，在myevnv文件夹下就会有bin lib lib64 pyvenv.cfg include四个文件夹
进入 bin 
输入source activate 
回车即进入虚拟环境

2.先安装virtualenv
pip3 install virtualenv
virtualenv安装完毕后,进入到一个目录中,执行
virtualenv --no-site-packages venv
则会在该目录下创建一个venv文件夹
这个venv文件夹下 会有bin include lib pip-selfcheck.json四个文件夹
进入 bin  ,输入source activate  回车即可进入虚拟环境
与方法1不同的是,这样创建的venv中会有activate_this.py文件,该文件也是用于启动虚拟环境,
是使用apache等服务器时需要的,而方法1不会生成activate_this.py文件



flask的安装
打开虚拟环境 python3.6已经自带了pip，不需要额外安装，有的python版本需要另外安装pip

pip install flask

这里会出现的问题：
大意是不能打开flask的网址 can't fectch “https....”
并提示原因是 找不到 ssl Moudule

我们打开python
输入 import ssl
报错，没有ssl模块，我们需要安装ssl模块才能安装flask

进入python安装所在目录，进入Modules文件夹
修改其中的Setup文件
找到下面一部分内容，改成如下所示（就是把一些#去掉）

# Socket module helper for socket(2)
_socket socketmodule.c

# Socket module helper for SSL support; you must comment out the other
# socket line above, and possibly edit the SSL variable:
#SSL=/usr/local/ssl
_ssl _ssl.c \
	-DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \
	-L$(SSL)/lib -lssl -lcrypto
	
注意有的文章建议改为_socket socketmodule.c timemodule.c，这只是特定版本要这样
但我们文件夹里本来就只有_socket socketmodule.c，不要添加timemodule.c，否则
会报错，什么PrintTime多次定义  
即我们只去注释或加注释，原本的文本内容不要动

我们还要安装ssl的有关软件
apt-get install openssl
仅装上面那个还不够
sudo apt-get install libssl-dev

接下来，回到python 的安装目录，
./configure
make
make install
重装一遍
打开python import ssl，成功，很好，打开虚拟环境，pip install flask即可
