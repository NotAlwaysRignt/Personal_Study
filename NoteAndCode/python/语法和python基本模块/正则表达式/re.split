re.split 可以把一个字符串根据正则表达式切割划分，并存储在一个列表里

切割字符串，把符合正则表达式部分去除，返回一个列表

>>> m = re.split(’\d+’ , ’dkjj23jjjj44’)
>>>m

[‘dkjj’ , ‘jjjj’ , ‘’ ]


切割字符串，符合正则表达式部分保留，返回一个列表
>>> m = re.split( ‘(\d+)’ , ’dkjj23jjjj44’)    #匹配部分加上（）
>>>m

[‘dkjj’ , ‘23’ , ‘jjjj’ , ‘44’ , ‘’ ]

对于多个正则表达式，可以用或'|'运算，注意这些正则表达式应该全部放在一个()里
示例：
>>> p  = pattern = re.compile("({%.*?%}|{{.*?}}|{#.*?#})",re.S)
>>> p.split("1234564786{{name}},hello{%if %}12345{#zhushi#}")

['1234564786', '{{name}}', ',hello', '{%if %}', '12345', '{#zhushi#}', '']

#如果"|"的每个部分都用括号括起来，如"({%.*?%})|({{.*?}})|({#.*?#})"，一样可以切分，但会出现许多None
假如符合{%.*?%}而不符合{#.*?#} {{.*?}}，最终会提取{%.*?%}和两个None
