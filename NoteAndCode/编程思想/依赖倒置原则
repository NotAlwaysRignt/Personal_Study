倚赖倒置原则:
1.尽可能不要在一个类的内部实例化另一个类.而将这个类以参数的形式传递进来.并且参数尽可能设置为一个接口类型
2.参数类型尽可能为接口,而不应为具体的类


第1点原因: 假如在类A的代码中实例化了类B,并让类B完成一系列功能,那么有一天类B被修改,比如构造函数改了,那么类A的代码也不得不被修改.因此我们最好将类B作为参数传给类A,对于A要用到B中的所有方法,我们最好写成一个接口,将A中的参数则设置为这个接口类型,然后让B去继承这个接口,进而可将B传入

第2点原因:接口是抽象的,因而它更稳定,我们在修改代码时只要确保这些接口的方法最终被实现即可,而具体的类则具有细节上的多变性


举例:有一个接口I 和类A,类B
public interface I{
    ...
}

public B implements I{
    ...
}

class A{
    public void fun(I i)
    {
        ...
    }
}
