要做优化,首先就要知道哪里速度慢,哪里需要优化,mysql数据库有慢查询日志功能,将超出规定时间的操作计入日志中

查看慢查询日志是否开启命令:
show variables like "slow_query_log";
+----------------+-------+
| Variable_name  | Value |
+----------------+-------+
| slow_query_log | OFF   |
+----------------+-------+



查看慢查询日志存储的地方:
show variables like "slow_query_log_file";
+---------------------+---------------------------------+
| Variable_name       | Value                           |
+---------------------+---------------------------------+
| slow_query_log_file | /var/lib/mysql/thinker-slow.log |
+---------------------+---------------------------------+


当然我们也可以将日志设置到我们自己的想要的位置
set global slow_query_log_file ="/home/mydictory/mysql-slow.log";


要开启慢查询日志功能
首先要确定哪些操作要记入慢查询日志
show variables like "log_queries_not_using_indexes";
如果为OFF,表示对没有使用索引的数据进行SQL语句操作是不会被计入慢查询日志,如果想对没有索引的数据进行sql语句操作时也记入数据库中,则应该设为ON

set global log_queries_not_using_indexes = on;
log_queries_not_using_indexes只能是全局变量,不能当session变量来操作

超过规定时间的操作将被计入慢查询日志,我们可以通过变量 long_query_time 查看,变量值的单位是秒

mysql> show variables like 'long_query_time';
+-----------------+-----------+
| Variable_name   | Value     |
+-----------------+-----------+
| long_query_time | 10.000000 |
+-----------------+-----------+
表示超过10秒的sql操作会被计入慢查询日志

我们可以设置它的值,可以全局(global)设置,也可以仅在当前会话(session)设置
set session long_query_time =0;
表示任何sql操作都会被计入慢查询日志,注意,如果数据库操作频繁,而long_query_time设置的时间又太短,那么可能会在短时间内产生大量的慢查询日志

慢查询日志中的内容,假设我们执行了一个查表操作 select * from store;
查看日志内容 tail /var/lib/mysql/thinker-slow.log

# Time: 2017-12-04T15:54:20.971089Z
# User@Host: root[root] @ localhost []  Id:     6
# Query_time: 0.000171  Lock_time: 0.000075 Rows_sent: 2  Rows_examined: 2
SET timestamp=1512402860;
select * from store;

依次为 
sql语句执行时间
用户信息
查询的相关信息 比如查询所花时间,锁时间,查询结果有多少行等
时间戳
执行的sql语句内容



警告! 警告! 警告!
如果想清空日志,不要将日志文件删除!!!将文件内容清空即可,如果将日志文件删除,可能mysql不会再创建日志
如果真的不小心删除了日志,重启 mysql
set global slow_query_log = on;
这时你可能会遇到
ERROR 29 (HY000): File '/var/lib/mysql/thinker-slow.log' not found (Errcode: 13 - Permission denied)

即便你重建了这个文件,也可能继续报这个错误,解决办法
修改slow_query_log_file ,设置另一个文件作为记录日志(注意不需要自己先手动创建日志文件)
mysql> set global slow_query_log_file ='/var/lib/mysql/thinker-slow.log';
Query OK, 0 rows affected (0.00 sec)

然后再开启慢查询日志
mysql> set global slow_query_log = on;
Query OK, 0 rows affected (0.00 sec)

如果显示OK,那么恭喜,日志可以用了

如果你还是喜欢用原来的日志文件名,可以修改 slow_query_log_file 设置回来,注意如果你想要设置的日志文件已经在目录中存在,先把它删掉,否则还可能报错.
比如 set global slow_query_log_file ='/var/lib/mysql/thinker-slow.log';
而thinker-slow.log 在设置前已经存在,先删掉它
