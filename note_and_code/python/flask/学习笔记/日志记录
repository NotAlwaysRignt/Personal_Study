flask(0.3以后) 自带了日志记录功能,要启动日志记录需要我们进行一些配置,用法如下:

import logging

handler = logging.FileHandler("warning.log")    #会创建一个 warning.log 文件夹 
app.logger.addHandler(handler)  #app是已经生成的flask实例

输出日志:
#每条信息都会在文件夹中自成一行
app.logger.warning("a warning occured")
app.logger.error("a error happen")


以上两种方法都会将信息写到前面指定的 warning.log 中

除了 error warning级别,还可以用app.logger.debug("...") app.logger.info("...")
不过 debug 和 info 要通过其它初始方法,详见文档


注意:如果在python文件的开头导入 app 实例 有时会出现失败的情况:
解决方法1 : 在需要输出日志的地方 再导入app文件实例,而不是在文件的开头(但这样做法不是很规范)
解决方法2 : 将 app 改为 current_app,也可以起到同样效果,即: 

from flask import current_app

current_app.logger.debug("...")
current_app.logger.warning("...")
current_app.logger.error("...")

使用 current_app 时可能要压入上下文
ctx = app.app_context()
ctx.push()
...
ctx.pop()
